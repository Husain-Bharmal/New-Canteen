{"ast":null,"code":"import axios from \"axios\";\nimport { SIGNUP_REQUEST, SIGNUP_SUCCESS, SIGNUP_FAIL, SIGNIN_REQUEST, SIGNIN_SUCCESS, SIGNIN_FAIL, AUTH_ERROR, USER_LOADED, LOGOUT } from \"./auth.types\";\nimport { setAlert } from \"../../redux/alert/alert.actions\";\nimport setAuthToken from \"../../utils/setAuthToken\";\n\n// Load user from token\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get(\"/me\");\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\nexport const registerUser = formData => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  try {\n    // Dispatch REGISTER_REQUEST\n    dispatch({\n      type: SIGNUP_REQUEST\n    });\n\n    // Make a request to backend API\n    const res = await axios.post(\"/signup\", formData, config);\n\n    // If no errors, dispatch REGISTER_SUCCESS\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Created account successfully\", \"success\"));\n    dispatch(loadUser());\n  } catch (err) {\n    // Send alerts\n    const errors = err.response.data.errors;\n    console.log(err);\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    if (err.response.data.msg) {\n      dispatch(setAlert(err.response.data.msg, \"danger\"));\n    }\n\n    // Dispatch REGISTER_FAIL if error\n    dispatch({\n      type: SIGNUP_FAIL\n    });\n  }\n};\nexport const loginUser = formData => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  try {\n    // Dispatch LOGIN_REQUEST\n    dispatch({\n      type: SIGNIN_REQUEST\n    });\n\n    // Make a request to backend API\n    const res = await axios.post(\"/signin\", formData, config);\n\n    // If no errors, dispatch LOGIN_SUCCESS\n    dispatch({\n      type: SIGNIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n    dispatch(setAlert(\"Signed In  successfully\", \"success\"));\n  } catch (err) {\n    // Send alerts\n    const errors = err.response && err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    if (err.response.data.msg) {\n      dispatch(setAlert(err.response.data.msg, \"danger\"));\n    }\n\n    // Dispatch LOGIN_FAIL if error\n    dispatch({\n      type: SIGNIN_FAIL\n    });\n  }\n};\nexport const logoutUser = () => async dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAIL","SIGNIN_REQUEST","SIGNIN_SUCCESS","SIGNIN_FAIL","AUTH_ERROR","USER_LOADED","LOGOUT","setAlert","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","console","log","registerUser","formData","config","headers","post","errors","response","forEach","error","msg","loginUser","logoutUser"],"sources":["C:/ReactProjects/CMS/New-Canteen/frontend/src/redux/auth/auth.actions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n  SIGNUP_REQUEST,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  SIGNIN_REQUEST,\r\n  SIGNIN_SUCCESS,\r\n  SIGNIN_FAIL,\r\n  AUTH_ERROR,\r\n  USER_LOADED,\r\n  LOGOUT,\r\n} from \"./auth.types\";\r\nimport { setAlert } from \"../../redux/alert/alert.actions\";\r\nimport setAuthToken from \"../../utils/setAuthToken\";\r\n\r\n// Load user from token\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(\"/me\");\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\nexport const registerUser = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    // Dispatch REGISTER_REQUEST\r\n    dispatch({\r\n      type: SIGNUP_REQUEST,\r\n    });\r\n\r\n    // Make a request to backend API\r\n    const res = await axios.post(\"/signup\", formData, config);\r\n\r\n    // If no errors, dispatch REGISTER_SUCCESS\r\n    dispatch({\r\n      type: SIGNUP_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Created account successfully\", \"success\"));\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    // Send alerts\r\n    const errors = err.response.data.errors;\r\n    console.log(err);\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    if (err.response.data.msg) {\r\n      dispatch(setAlert(err.response.data.msg, \"danger\"));\r\n    }\r\n\r\n    // Dispatch REGISTER_FAIL if error\r\n    dispatch({\r\n      type: SIGNUP_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    // Dispatch LOGIN_REQUEST\r\n    dispatch({\r\n      type: SIGNIN_REQUEST,\r\n    });\r\n\r\n    // Make a request to backend API\r\n    const res = await axios.post(\"/signin\", formData, config);\r\n\r\n    // If no errors, dispatch LOGIN_SUCCESS\r\n    dispatch({\r\n      type: SIGNIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n    dispatch(setAlert(\"Signed In  successfully\", \"success\"));\r\n  } catch (err) {\r\n    // Send alerts\r\n    const errors = err.response && err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    if (err.response.data.msg) {\r\n      dispatch(setAlert(err.response.data.msg, \"danger\"));\r\n    }\r\n\r\n    // Dispatch LOGIN_FAIL if error\r\n    dispatch({\r\n      type: SIGNIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}