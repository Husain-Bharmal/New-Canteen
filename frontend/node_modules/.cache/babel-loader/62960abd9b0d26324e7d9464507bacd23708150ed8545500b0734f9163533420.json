{"ast":null,"code":"import { PLACE_ORDER_REQUEST, PLACE_ORDER_SUCCESS, PLACE_ORDER_FAIL, GET_ADMIN_ORDER_REQUEST, GET_ADMIN_ORDER_SUCCESS, GET_ADMIN_ORDER_FAIL, GET_MY_ORDERS_REQUEST, GET_MY_ORDERS_SUCCESS, GET_MY_ORDERS_FAIL, CONFIRM_ORDER_REQUEST, CONFIRM_ORDER_SUCCESS, CONFIRM_ORDER_FAIL, SET_PAYMENT_TYPE_REQUEST, SET_PAYMENT_TYPE_SUCCESS, SET_PAYMENT_TYPE_FAIL, SET_PAYMENT_STATUS_REQUEST, SET_PAYMENT_STATUS_SUCCESS, SET_PAYMENT_STATUS_FAIL } from \"./order.types\";\nconst initialState = {\n  orders: [],\n  order: {},\n  loading: true,\n  error: \"\"\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case PLACE_ORDER_REQUEST:\n    case GET_ADMIN_ORDER_REQUEST:\n    case GET_MY_ORDERS_REQUEST:\n    case CONFIRM_ORDER_REQUEST:\n    case SET_PAYMENT_TYPE_REQUEST:\n    case SET_PAYMENT_STATUS_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case PLACE_ORDER_SUCCESS:\n      return {\n        ...state,\n        orders: [...state.orders, payload],\n        loading: false\n      };\n    case GET_ADMIN_ORDER_SUCCESS:\n    case GET_MY_ORDERS_SUCCESS:\n      return {\n        ...state,\n        orders: payload,\n        loading: false\n      };\n    case CONFIRM_ORDER_SUCCESS:\n      const indexConfirm = state.orders.findIndex(i => i._id === payload.id);\n      const newOrderConfirm = [...state.orders];\n      newOrderConfirm[indexConfirm].isConfirmed = payload.isConfirmed;\n      return {\n        ...state,\n        orders: newOrderConfirm,\n        loading: false\n      };\n    case SET_PAYMENT_TYPE_SUCCESS:\n      const indexType = state.orders.findIndex(i => i._id === payload.id);\n      const newOrderType = [...state.orders];\n      newOrderType[indexType].paymentType = payload.paymentType;\n      return {\n        ...state,\n        orders: newOrderType,\n        loading: false\n      };\n    case SET_PAYMENT_STATUS_SUCCESS:\n      const indexStatus = state.orders.findIndex(i => i._id === payload._id);\n      const newOrderStatus = [...state.orders];\n      newOrderStatus[indexStatus].paymentStatus = true;\n      return {\n        ...state,\n        orders: newOrderStatus,\n        loading: false\n      };\n    case PLACE_ORDER_FAIL:\n    case GET_ADMIN_ORDER_FAIL:\n    case GET_MY_ORDERS_FAIL:\n    case CONFIRM_ORDER_FAIL:\n    case SET_PAYMENT_STATUS_FAIL:\n    case SET_PAYMENT_TYPE_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: payload\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["PLACE_ORDER_REQUEST","PLACE_ORDER_SUCCESS","PLACE_ORDER_FAIL","GET_ADMIN_ORDER_REQUEST","GET_ADMIN_ORDER_SUCCESS","GET_ADMIN_ORDER_FAIL","GET_MY_ORDERS_REQUEST","GET_MY_ORDERS_SUCCESS","GET_MY_ORDERS_FAIL","CONFIRM_ORDER_REQUEST","CONFIRM_ORDER_SUCCESS","CONFIRM_ORDER_FAIL","SET_PAYMENT_TYPE_REQUEST","SET_PAYMENT_TYPE_SUCCESS","SET_PAYMENT_TYPE_FAIL","SET_PAYMENT_STATUS_REQUEST","SET_PAYMENT_STATUS_SUCCESS","SET_PAYMENT_STATUS_FAIL","initialState","orders","order","loading","error","state","action","type","payload","indexConfirm","findIndex","i","_id","id","newOrderConfirm","isConfirmed","indexType","newOrderType","paymentType","indexStatus","newOrderStatus","paymentStatus"],"sources":["C:/ReactProjects/CMS/New-Canteen/frontend/src/redux/order/order.reducers.js"],"sourcesContent":["import {\r\n  PLACE_ORDER_REQUEST,\r\n  PLACE_ORDER_SUCCESS,\r\n  PLACE_ORDER_FAIL,\r\n  GET_ADMIN_ORDER_REQUEST,\r\n  GET_ADMIN_ORDER_SUCCESS,\r\n  GET_ADMIN_ORDER_FAIL,\r\n  GET_MY_ORDERS_REQUEST,\r\n  GET_MY_ORDERS_SUCCESS,\r\n  GET_MY_ORDERS_FAIL,\r\n  CONFIRM_ORDER_REQUEST,\r\n  CONFIRM_ORDER_SUCCESS,\r\n  CONFIRM_ORDER_FAIL,\r\n  SET_PAYMENT_TYPE_REQUEST,\r\n  SET_PAYMENT_TYPE_SUCCESS,\r\n  SET_PAYMENT_TYPE_FAIL,\r\n  SET_PAYMENT_STATUS_REQUEST,\r\n  SET_PAYMENT_STATUS_SUCCESS,\r\n  SET_PAYMENT_STATUS_FAIL,\r\n} from \"./order.types\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  order: {},\r\n  loading: true,\r\n  error: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case PLACE_ORDER_REQUEST:\r\n    case GET_ADMIN_ORDER_REQUEST:\r\n    case GET_MY_ORDERS_REQUEST:\r\n    case CONFIRM_ORDER_REQUEST:\r\n    case SET_PAYMENT_TYPE_REQUEST:\r\n    case SET_PAYMENT_STATUS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case PLACE_ORDER_SUCCESS:\r\n      return { ...state, orders: [...state.orders, payload], loading: false };\r\n    case GET_ADMIN_ORDER_SUCCESS:\r\n    case GET_MY_ORDERS_SUCCESS:\r\n      return { ...state, orders: payload, loading: false };\r\n    case CONFIRM_ORDER_SUCCESS:\r\n      const indexConfirm = state.orders.findIndex((i) => i._id === payload.id);\r\n      const newOrderConfirm = [...state.orders];\r\n      newOrderConfirm[indexConfirm].isConfirmed = payload.isConfirmed;\r\n      return { ...state, orders: newOrderConfirm, loading: false };\r\n    case SET_PAYMENT_TYPE_SUCCESS:\r\n      const indexType = state.orders.findIndex((i) => i._id === payload.id);\r\n      const newOrderType = [...state.orders];\r\n      newOrderType[indexType].paymentType = payload.paymentType;\r\n      return { ...state, orders: newOrderType, loading: false };\r\n    case SET_PAYMENT_STATUS_SUCCESS:\r\n      const indexStatus = state.orders.findIndex((i) => i._id === payload._id);\r\n      const newOrderStatus = [...state.orders];\r\n      newOrderStatus[indexStatus].paymentStatus = true;\r\n      return { ...state, orders: newOrderStatus, loading: false };\r\n    case PLACE_ORDER_FAIL:\r\n    case GET_ADMIN_ORDER_FAIL:\r\n    case GET_MY_ORDERS_FAIL:\r\n    case CONFIRM_ORDER_FAIL:\r\n    case SET_PAYMENT_STATUS_FAIL:\r\n    case SET_PAYMENT_TYPE_FAIL:\r\n      return { ...state, loading: false, error: payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}